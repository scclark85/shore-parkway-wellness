{"map":"{\"version\":3,\"sources\":[\"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/src/serviceWorker.js\",\"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/src/index.js\"],\"names\":[\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"react_default\",\"a\",\"createElement\",\"App_default\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"then\",\"registration\",\"unregister\"],\"mappings\":\"6rGAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,EAAAA,EAASC,OAAOC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,MAASG,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC\",\"sourcesContent\":[\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\n// If you want your app to work offline and load faster, you can change\\n// unregister() to register() below. Note this comes with some pitfalls.\\n// Learn more about service workers: https://bit.ly/CRA-PWA\\nserviceWorker.unregister();\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,function(e,s){throw new Error(\"Module build failed (from ./node_modules/babel-loader/lib/index.js):\\nSyntaxError: /Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/src/App.js: Only one default export allowed per module. (46:0)\\n\\n\\x1b[0m \\x1b[90m 44 | \\x1b[39m\\x1b[90m// }\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 45 | \\x1b[39m\\x1b[0m\\n\\x1b[0m\\x1b[31m\\x1b[1m>\\x1b[22m\\x1b[39m\\x1b[90m 46 | \\x1b[39m\\x1b[36mexport\\x1b[39m \\x1b[36mdefault\\x1b[39m \\x1b[33mApp\\x1b[39m\\x1b[33m;\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m    | \\x1b[39m\\x1b[31m\\x1b[1m^\\x1b[22m\\x1b[39m\\x1b[0m\\n\\x1b[0m \\x1b[90m 47 | \\x1b[39m\\x1b[0m\\n    at Object.raise (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:3851:17)\\n    at Object.checkDuplicateExports (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:8592:18)\\n    at Object.checkExport (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:8527:14)\\n    at Object.parseExport (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:8366:12)\\n    at Object.parseExport (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:2199:24)\\n    at Object.parseStatementContent (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:7395:27)\\n    at Object.parseStatement (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:7291:17)\\n    at Object.parseStatement (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:1993:26)\\n    at Object.parseBlockOrModuleBlockBody (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:7868:25)\\n    at Object.parseBlockBody (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:7855:10)\\n    at Object.parseTopLevel (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:7220:10)\\n    at Object.parseTopLevel (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:2820:28)\\n    at Object.parse (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:8863:17)\\n    at parse (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/parser/lib/index.js:11135:38)\\n    at parser (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/core/lib/transformation/normalize-file.js:170:34)\\n    at normalizeFile (/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/@babel/core/lib/transformation/normalize-file.js:138:11)\")},function(e,s,r){e.exports=r(11)},,,,,,function(e,s,r){},function(e,s,r){\"use strict\";r.r(s);var a=r(0),o=r.n(a),n=r(2),l=r.n(n),t=(r(10),r(3)),c=r.n(t);Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));l.a.render(o.a.createElement(c.a,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[4,1,2]]]);","extractedComments":[]}