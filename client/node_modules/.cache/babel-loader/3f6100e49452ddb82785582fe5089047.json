{"ast":null,"code":"import _regeneratorRuntime from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/src/components/Form/index.js\";\nimport React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from \"axios\";\n\nvar ContactForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactForm, _Component);\n\n  function ContactForm(props) {\n    var _this;\n\n    _classCallCheck(this, ContactForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactForm).call(this, props));\n\n    _this.handleChange = function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.state = {\n      name: '',\n      email: '',\n      phone: '',\n      zip: '',\n      select: [],\n      message: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    _this.formRef = null;\n    return _this;\n  }\n\n  _createClass(ContactForm, [{\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this2 = this;\n\n        var _this$state, name, email, phone, zip, select, message, form;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = this.state, name = _this$state.name, email = _this$state.email, phone = _this$state.phone, zip = _this$state.zip, select = _this$state.select, message = _this$state.message;\n                _context.next = 4;\n                return axios.post(\"http://localhost:8080/api/form\", {\n                  name: name,\n                  email: email,\n                  phone: phone,\n                  zip: zip,\n                  select: select,\n                  message: message\n                }).then(function (response) {\n                  if (response.data.msg === 'success') {\n                    alert(\"Message Sent.\");\n\n                    _this2.resetForm();\n                  } else if (response.data.msg === 'fail') {\n                    alert(\"Message failed to send.\");\n                  }\n                });\n\n              case 4:\n                form = _context.sent;\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"resetForm\",\n    value: function resetForm() {\n      document.getElementById('contact-form').reset();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(Form, {\n        id: \"contact-form\",\n        onSubmit: this.handleSubmit,\n        method: \"POST\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"fullname\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \" Full Name\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"name\",\n        onChange: this.handleChange,\n        placeholder: \"John Smith\",\n        value: this.state.name,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Email:\"), React.createElement(Input, {\n        type: \"email\",\n        name: \"email\",\n        onChange: this.handleChange,\n        placeholder: \"random@random.com\",\n        value: this.state.email,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"phone\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Phone:\"), React.createElement(Input, {\n        type: \"phone\",\n        name: \"phone\",\n        onChange: this.handleChange,\n        placeholder: \"(123)456-0000\",\n        value: this.state.phone,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"zip\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Zip Code:\"), React.createElement(Input, {\n        type: \"zip\",\n        name: \"zip\",\n        value: this.state.zip,\n        placeholder: \"11214\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"referraltype\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"How Did You Hear About Us?\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(\"select\", {\n        type: \"select\",\n        name: \"select\",\n        id: \"formSelect\",\n        onChange: this.handleChange,\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Another Client\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Digital / Internet\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Drive By / Building Signage\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Employee / Owner\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Other\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Print Advertisment\"))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Message:\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"message\",\n        placeholder: \"Leave us a message...\",\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), React.createElement(Button, {\n        variant: \"dark\",\n        className: \"FormBtn\",\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return ContactForm;\n}(Component);\n\nexport default ContactForm;","map":{"version":3,"sources":["/Users/sarahclark/Documents/code/Projects/shore-parkway-wellness/client/src/components/Form/index.js"],"names":["React","Component","Button","Form","FormGroup","Label","Input","axios","ContactForm","props","handleChange","e","setState","target","name","value","state","email","phone","zip","select","message","bind","handleSubmit","formRef","preventDefault","post","then","response","data","msg","alert","resetForm","form","document","getElementById","reset"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyCC,KAAzC,QAAsD,YAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;;AADe,UASnBC,YATmB,GASJ,UAAAC,CAAC,EAAI;AAChB,YAAKC,QAAL,qBAAiBD,CAAC,CAACE,MAAF,CAASC,IAA1B,EAAiCH,CAAC,CAACE,MAAF,CAASE,KAA1C;AAEH,KAZkB;;AAEf,UAAKC,KAAL,GAAa;AAAEF,MAAAA,IAAI,EAAE,EAAR;AAAYG,MAAAA,KAAK,EAAE,EAAnB;AAAuBC,MAAAA,KAAK,EAAE,EAA9B;AAAkCC,MAAAA,GAAG,EAAE,EAAvC;AAA2CC,MAAAA,MAAM,EAAE,EAAnD;AAAuDC,MAAAA,OAAO,EAAE;AAAhE,KAAb;AAEA,UAAKX,YAAL,GAAoB,MAAKA,YAAL,CAAkBY,IAAlB,+BAApB;AACA,UAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,+BAApB;AACA,UAAKE,OAAL,GAAe,IAAf;AANe;AAOlB;;;;;;;gDAOkBb,C;;;;;;;;;AACfA,gBAAAA,CAAC,CAACc,cAAF;8BAEqD,KAAKT,K,EAAlDF,I,eAAAA,I,EAAMG,K,eAAAA,K,EAAOC,K,eAAAA,K,EAAOC,G,eAAAA,G,EAAKC,M,eAAAA,M,EAAQC,O,eAAAA,O;;uBAEtBd,KAAK,CAACmB,IAAN,CAAW,gCAAX,EAA6C;AAC5DZ,kBAAAA,IAAI,EAAJA,IAD4D;AAE5DG,kBAAAA,KAAK,EAALA,KAF4D;AAG5DC,kBAAAA,KAAK,EAALA,KAH4D;AAI5DC,kBAAAA,GAAG,EAAHA,GAJ4D;AAK5DC,kBAAAA,MAAM,EAANA,MAL4D;AAM5DC,kBAAAA,OAAO,EAAPA;AAN4D,iBAA7C,EAQdM,IARc,CAQT,UAACC,QAAD,EAAc;AAChB,sBAAIA,QAAQ,CAACC,IAAT,CAAcC,GAAd,KAAsB,SAA1B,EAAqC;AACjCC,oBAAAA,KAAK,CAAC,eAAD,CAAL;;AACA,oBAAA,MAAI,CAACC,SAAL;AACH,mBAHD,MAGO,IAAIJ,QAAQ,CAACC,IAAT,CAAcC,GAAd,KAAsB,MAA1B,EAAkC;AACrCC,oBAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,iBAfc,C;;;AAAbE,gBAAAA,I;;;;;;;;;;;;;;;;;;gCAkBC;AACPC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,cAAxB,EAAwCC,KAAxC;AACH;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,EAAC,cAAT;AAAwB,QAAA,QAAQ,EAAE,KAAKb,YAAvC;AAAqD,QAAA,MAAM,EAAC,MAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,IAAI,EAAC,MAFT;AAGI,QAAA,QAAQ,EAAE,KAAKb,YAHnB;AAII,QAAA,WAAW,EAAC,YAJhB;AAKI,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWF,IALtB;AAK4B,QAAA,QAAQ,MALpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFJ,EAYI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAE,KAAKJ,YAHnB;AAII,QAAA,WAAW,EAAC,mBAJhB;AAKI,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWC,KALtB;AAK6B,QAAA,QAAQ,MALrC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAZJ,EAsBI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,OADT;AAEI,QAAA,IAAI,EAAC,OAFT;AAGI,QAAA,QAAQ,EAAE,KAAKP,YAHnB;AAII,QAAA,WAAW,EAAC,eAJhB;AAKI,QAAA,KAAK,EAAE,KAAKM,KAAL,CAAWE,KALtB;AAMI,QAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAtBJ,EAiCI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,KADT;AAEI,QAAA,IAAI,EAAC,KAFT;AAGI,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWG,GAHtB;AAII,QAAA,WAAW,EAAC,OAJhB;AAKI,QAAA,QAAQ,EAAE,KAAKT,YALnB;AAMI,QAAA,QAAQ,MANZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAjCJ,EA4CI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,cAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI;AACI,QAAA,IAAI,EAAC,QADT;AAEI,QAAA,IAAI,EAAC,QAFT;AAGI,QAAA,EAAE,EAAC,YAHP;AAII,QAAA,QAAQ,EAAE,KAAKA,YAJnB;AAKI,QAAA,QAAQ,MALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAPJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BARJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCATJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVJ,EAWI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAXJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAZJ,CAHJ,CA5CJ,EA+DI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,EAEI,oBAAC,KAAD;AACI,QAAA,IAAI,EAAC,UADT;AAEI,QAAA,IAAI,EAAC,SAFT;AAGI,QAAA,WAAW,EAAC,uBAHhB;AAII,QAAA,QAAQ,EAAE,KAAKA,YAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CA/DJ,EAwEI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,MAAhB;AAAuB,QAAA,SAAS,EAAC,SAAjC;AAA2C,QAAA,IAAI,EAAC,IAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxEJ,CADJ,CADJ;AAkFH;;;;EA7HqBT,S;;AAgI1B,eAAeO,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Form, FormGroup, Label, Input } from 'reactstrap';\nimport axios from \"axios\";\n\nclass ContactForm extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { name: '', email: '', phone: '', zip: '', select: [], message: '' };\n\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.formRef = null;\n    }\n\n    handleChange = e => {\n        this.setState({ [e.target.name]: e.target.value })\n\n    }\n\n    async handleSubmit(e) {\n        e.preventDefault()\n\n        const { name, email, phone, zip, select, message } = this.state\n\n        const form = await axios.post(\"http://localhost:8080/api/form\", {\n            name,\n            email,\n            phone,\n            zip,\n            select,\n            message\n        })\n            .then((response) => {\n                if (response.data.msg === 'success') {\n                    alert(\"Message Sent.\");\n                    this.resetForm()\n                } else if (response.data.msg === 'fail') {\n                    alert(\"Message failed to send.\")\n                }\n            })\n    }\n\n    resetForm(){\n        document.getElementById('contact-form').reset();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <Form id=\"contact-form\" onSubmit={this.handleSubmit} method=\"POST\">\n\n                    <FormGroup>\n                        <Label for=\"fullname\"> Full Name</Label>\n                        <Input\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={this.handleChange}\n                            placeholder=\"John Smith\"\n                            value={this.state.name} required />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"email\">Email:</Label>\n                        <Input\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={this.handleChange}\n                            placeholder=\"random@random.com\"\n                            value={this.state.email} required />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"phone\">Phone:</Label>\n                        <Input\n                            type=\"phone\"\n                            name=\"phone\"\n                            onChange={this.handleChange}\n                            placeholder=\"(123)456-0000\"\n                            value={this.state.phone}\n                            required />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"zip\">Zip Code:</Label>\n                        <Input\n                            type=\"zip\"\n                            name=\"zip\"\n                            value={this.state.zip}\n                            placeholder=\"11214\"\n                            onChange={this.handleChange}\n                            required />\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"referraltype\">How Did You Hear About Us?</Label>\n                        <br />\n                        <select\n                            type=\"select\"\n                            name=\"select\"\n                            id=\"formSelect\"\n                            onChange={this.handleChange}\n                            required>\n                            <option></option>\n                            <option>Another Client</option>\n                            <option>Digital / Internet</option>\n                            <option>Drive By / Building Signage</option>\n                            <option>Employee / Owner</option>\n                            <option>Other</option>\n                            <option>Print Advertisment</option>\n                        </select>\n                    </FormGroup>\n\n                    <FormGroup>\n                        <Label for=\"message\">Message:</Label>\n                        <Input\n                            type=\"textarea\"\n                            name=\"message\"\n                            placeholder=\"Leave us a message...\"\n                            onChange={this.handleChange} />\n                    </FormGroup>\n\n                    <Button variant=\"dark\" className=\"FormBtn\" size=\"lg\">\n                        Submit\n                    </Button>\n\n                </Form>\n            </div>\n\n        )\n    }\n}\n\nexport default ContactForm"]},"metadata":{},"sourceType":"module"}